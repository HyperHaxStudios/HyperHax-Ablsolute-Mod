// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: HUD Object
// Script Author: Christan Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

//-------Aliases-------//
private alias 5 : TYPE_HUD
//object.value2 reserved for display of game mode info
private alias object.value7 : TimeOverFlag
private alias object.value8 : time.fadeout
private alias object.value10 : debug.toggle
private alias object.value30 : display.milliSeconds
private alias object.value31 : display.seconds
private alias object.value32 : display.minutes


// Function declarations
reserve function HUD_DrawMainGame
reserve function HUD_DrawTimeAttack
reserve function HUD_DrawArcadeMode
reserve function HUD_DrawNickArcadeMode
reserve function DebugExtra
reserve function DebugDisplays
reserve function TileFind
reserve function PerfectCount

// Static Values

// Tables
private value HUD_X = 0;

event ObjectMain
	switch saved.timeLimit
		case 1
			display.milliSeconds = 0
			display.seconds = 0
			display.minutes = 3
			
			display.milliSeconds -= stage.milliSeconds
			display.seconds -= stage.seconds
			display.minutes -= stage.minutes
			
			while display.milliSeconds < 0
				display.milliseconds += 100
				display.seconds--
			loop
			
			while display.seconds < 0
				display.seconds += 60
				display.minutes--
			loop
			break
		default
			display.milliSeconds = stage.milliSeconds
			display.seconds = stage.seconds
			display.minutes = stage.minutes
			break
	end switch
end event

function PerfectCount
	switch stage.playerListPos
		case 0
		case 3
			temp0 = 0
			foreach (TypeName[Ring], arrayPos0, ALL_ENTITIES)
				if object[arrayPos0].propertyValue <= 1
					temp0++
				end if
			next
			break
		case 1
		case 2
			temp0 = 0
			foreach (TypeName[Ring], arrayPos0, ALL_ENTITIES)
				if object[arrayPos0].propertyValue != 2
					temp0++
				end if
			next
			break
	end switch
end function


function DebugExtra
	//Extra Numbers below rings, useful for debugging+
	if inputPress.buttonX == 1
		debug.toggle ^= 1
	end if
	
	if debug.toggle == 1	
		temp2 = screen.xsize
		temp2 -= 80
		temp1 = screen.xsize
		temp1 -= 24
		temp0 = object[0].xvel
		temp0 *= 60
		temp0 >>= 16
		Abs(temp0)
		DrawNumbers(0, temp2, 13, temp0, 5, 8, 1)
		temp0 = object[0].yvel
		temp0 *= 60
		temp0 >>= 16
		Abs(temp0)
		DrawNumbers(0, temp2, 29, temp0, 5, 8, 1)
		temp0 = object[0].speed
		temp0 *= 60
		temp0 >>= 16
		Abs(temp0)
		DrawNumbers(0, temp2, 45, temp0, 5, 8, 1)
		DrawNumbers(0, temp1, 45, stage.waterLevel, 5, 8, 1)
		
		CallFunction(PerfectCount)
		DrawNumbers(0, 50, 61, temp0, 7, 8, 0)
		//DrawNumbers(0, 50, 77, screen.cameraX, 7, 8, 0)
		//DrawNumbers(0, 100, 93, screen.cameraY, 7, 8, 0)
		//DrawNumbers(0, 20, 109, recSeconds, 7, 8, 0)
		//DrawNumbers(0, 20, 125, recMilliSeconds, 7, 8, 0)

		//Simple function to display foreground chunk info of character position
		CallFunction(TileFind)
	end if
end function

function DebugDisplays
	temp0 = object[0].xpos
	temp0 >>= 16
	Abs(temp0)
	temp1 = screen.xsize
	temp1 -= 24
	DrawNumbers(0, temp1, 13, temp0, 5, 8, 1)
	temp0 = object[0].ypos
	temp0 >>= 16
	Abs(temp0)
	DrawNumbers(0, temp1, 29, temp0, 5, 8, 1)

	temp1 -= 42
	if object[0].xpos >= 0
		DrawSpriteScreenXY(18, temp1, 15)
	else
		DrawSpriteScreenXY(36, temp1, 15)
	end if
	if object[0].ypos >= 0
		DrawSpriteScreenXY(19, temp1, 31)
	else
		DrawSpriteScreenXY(37, temp1, 31)
	end if
end function

function TileFind
	temp1 = object[0].xpos
	temp1 >>= 16
	temp1 /= 128
	
	temp2 = object[0].ypos
	temp2 >>= 16
	temp2 /= 128	
	GetTileLayerEntry(temp3, 0, temp1, temp2)		
	
	DrawNumbers(0, screen.xcenter, 13, temp1, 7, 8, 0)
	DrawNumbers(0, screen.xcenter, 29, temp2, 7, 8, 0)
	DrawNumbers(0, screen.xcenter, 45, temp3, 7, 8, 0)
	
	temp1 = object[0].xpos
	temp1 >>= 16
	temp2 = object[0].ypos
	temp2 >>= 16
	temp3 = 0
	temp4 = 0
	temp5 = 20
	temp6 = 61
	
	while temp4 < 8
		while temp3 < 8
			//Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_INDEX)
			if temp0 != 0
				//DrawNumbers(0, temp5, temp6, temp0, 7, 8, 0)
			end if
			temp1 += 16
			temp3++
			temp5 += 25
		loop
		temp1 = object[0].xpos
		temp1 >>= 16
		temp2 += 16
		temp3 = 0
		temp4++
		temp5 = 20
		temp6 += 15
	loop	
end function

function HUD_DrawMainGame
	DrawSpriteScreenXY(10, 17, 13)
	temp5 = 0
	temp1 = display.minutes
	while temp1 >= 10
		temp5 += 8
		temp1 /= 10
	loop
	
	//Red Time
	if object.value1 > 7
		switch saved.timeLimit
		case 1 // 3 minutes
			temp1 = 2
			break
		case 2 //10 minutes
			temp1 = 9
			break
		default
			temp1 = 0
			break
		end switch
		if temp1 > 0
			if stage.minutes >= temp1
				DrawSpriteScreenXY(11, 17, 29)
			end if
		end if			
	end if
	
	if object[0].value0 == 0
		if object.value1 > 7
			DrawSpriteScreenXY(12, 17, 45)
		end if
	end if
	temp2 = 104
	temp2 += temp5
	DrawNumbers(0, temp2, 13, player.score, 6, 8, 0)

	if saved.Timer == 0
		temp2 = 67
		temp2 += temp5
		DrawSpriteScreenXY(14, temp2, 29)
		temp2 += 13
	else
		temp2 = 67
		temp2 += temp5
		DrawSpriteScreenXY(13, temp2, 29)
		temp2 += 37
		DrawNumbers(0, temp2, 29, display.milliSeconds, 2, 8, 1)
	end if

	DrawNumbers(0, temp2, 45, object[0].value0, 3, 8, 0)
	
	temp2 = 80
	temp2 += temp5
	DrawNumbers(0, temp2, 29, display.seconds, 2, 8, 1)
	temp2 -= 24
	DrawNumbers(0, temp2, 29, display.minutes, 10, 8, 0)
	
	if stage.debugMode == 1
		CallFunction(DebugDisplays)
		CallFunction(DebugExtra)
	end if
	
	temp0 = stage.playerListPos
	temp0 += 15
	temp1 = 212
	temp1 -= achieve.yoffset
	
	CheckEqual(stage.playerListPos, 0)
	temp2 = checkResult
	checkEqual(PlayerObject_SuperState, 1)
	temp2 &= checkResult
	if temp2 == 1
		DrawSpriteScreenXY(42, 16, temp1)
	else
		DrawSpriteScreenXY(temp0, 16, temp1)
	end if
	
	temp0 += 6
	temp1 += 1
	DrawSpriteScreenXY(temp0, 33, temp1)
	temp1 += 9
	DrawSpriteScreenXY(20, 38, temp1)
	temp1 -= 2
	if saved.lives == 1
		DrawSpriteScreenXY(38, 56, temp1)
	else
		DrawNumbers(24, 56, temp1, player.lives, 2, 8, 0)
	end if
end function

function HUD_DrawTimeAttack
	//Time
	temp0 = screen.xcenter
	temp0 -= 47
	DrawSpriteScreenXY(39, temp0, 8)
	temp0 += 49	

	temp1 = stage.minutes
	while temp1 >= 10
		temp0 += 8
		temp1 /= 10
	loop
	
	DrawSpriteScreenXY(13, temp0, 8)
	temp0 += 37
	DrawNumbers(0, temp0, 8, stage.milliSeconds, 2, 8, 1)
	temp0 -= 24
	DrawNumbers(0, temp0, 8, stage.seconds, 2, 8, 1)
	temp5 = temp0
	temp0 -= 24
	DrawNumbers(0, temp0, 8, stage.minutes, 10, 8, 0)
	
	//Rings
	temp1 = screen.xcenter
	temp1 -= 34
	DrawSpriteScreenXY(40, temp1, 23)
	if object[0].value0 == 0
		if object.value1 > 7
			DrawSpriteScreenXY(12, temp1, 23)
		end if
	end if
	temp1 += 60
	DrawNumbers(0, temp1, 23, object[0].value0, 3, 8, 0)
	
	//Best
	temp1 = screen.ysize
	temp1 -= 19
	temp1 -= achieve.yoffset
	temp0 = screen.xcenter
	temp0 -= 47
	DrawSpriteScreenXY(41, temp0, temp1)
	temp0 += 49
	
	object.value3 = object.value2
	object.value4 = 0
	object.value5 = 0
	while object.value3 >= 6000
		object.value5++
		object.value3 -= 6000
	loop
	
	while object.value3 >= 100
		object.value4++
		object.value3 -= 100
	loop
	
	if object.value5 > 9
		temp0 += 8
	end if	
		
	DrawSpriteScreenXY(13, temp0, temp1)
	temp0 += 37
		
	DrawNumbers(0, temp0, temp1, object.value3, 2, 8, 1)
	temp0 -= 24
	DrawNumbers(0, temp0, temp1, object.value4, 2, 8, 1)
	temp0 -= 24
	DrawNumbers(0, temp0, temp1, object.value5, 2, 8, 0)
end function


function HUD_DrawNickArcadeMode
	DrawSpriteScreenXY(10, 17, 13)
	
	if object[0].value0 == 0
		if object.value1 > 7
			DrawSpriteScreenXY(12, 17, 45)
		end if
	end if
	DrawNumbers(0, 104, 13, player.score, 6, 8, 0)
	
	temp0 = 30
	temp0 -= stage.seconds
	
	temp1 = 0
	temp1 -= stage.milliseconds
	
	while temp1 < 0
		temp0--
		temp1 += 100
	loop

	if saved.Timer == 0
		DrawSpriteScreenXY(14, 67, 29)
		DrawNumbers(0, 80, 45, object[0].value0, 3, 8, 0)
	else
		DrawSpriteScreenXY(13, 67, 29)
		DrawNumbers(0, 104, 29, temp1, 2, 8, 1)
		DrawNumbers(0, 104, 45, object[0].value0, 3, 8, 0)
	end if
	
	DrawNumbers(0, 80, 29, temp0, 2, 8, 1)
	DrawNumbers(0, 56, 29, 0, 10, 8, 0)
		
	if stage.debugMode == 1
		CallFunction(DebugDisplays)
		CallFunction(DebugExtra)
	end if
		
	object.inkEffect = INK_ALPHA
	object.alpha = 192
	temp0 = screen.ysize
	temp0 -= achieve.yoffset
	DrawSpriteScreenFX(43, FX_INK, 0, temp0)	
	DrawSpriteScreenFX(44, FX_INK, 0, temp0)
end function

function HUD_DrawArcadeMode
	DrawSpriteScreenXY(10, 17, 13)
	temp5 = 0
	temp1 = display.minutes
	while temp1 >= 10
		temp5 += 8
		temp1 /= 10
	loop
	
	//Red Time
	if object.value1 > 7
		switch saved.timeLimit
		case 1 // 3 minutes
			temp1 = 2
			break
		case 2 //10 minutes
			temp1 = 9
			break
		default
			temp1 = 0
			break
		end switch
		if temp1 > 0
			if stage.minutes > temp1
				DrawSpriteScreenXY(11, 17, 29)
			end if
		end if			
	end if
	
	if object[0].value0 == 0
		if object.value1 > 7
			DrawSpriteScreenXY(12, 17, 45)
		end if
	end if
	temp2 = 104
	temp2 += temp5
	DrawNumbers(0, temp2, 13, player.score, 6, 8, 0)

	if saved.Timer == 0
		temp2 = 67
		temp2 += temp5
		DrawSpriteScreenXY(14, temp2, 29)
		temp2 += 13
	else
		temp2 = 67
		temp2 += temp5
		DrawSpriteScreenXY(13, temp2, 29)
		temp2 += 37
		DrawNumbers(0, temp2, 29, display.milliSeconds, 2, 8, 1)
	end if

	DrawNumbers(0, temp2, 45, object[0].value0, 3, 8, 0)
	
	temp2 = 80
	temp2 += temp5
	DrawNumbers(0, temp2, 29, display.seconds, 2, 8, 1)
	temp2 -= 24
	DrawNumbers(0, temp2, 29, display.minutes, 10, 8, 0)
	
	if stage.debugMode == 1
		CallFunction(DebugDisplays)
		CallFunction(DebugExtra)
	end if
	
	temp0 = stage.playerListPos
	temp0 += 15
	temp1 = 212
	temp1 -= achieve.yoffset
	
	CheckEqual(stage.playerListPos, 0)
	temp2 = checkResult
	checkEqual(PlayerObject_SuperState, 1)
	temp2 &= checkResult
	if temp2 == 1
		DrawSpriteScreenXY(42, 16, temp1)
	else
		DrawSpriteScreenXY(temp0, 16, temp1)
	end if
	
	temp0 += 6
	temp1 += 1
	DrawSpriteScreenXY(temp0, 33, temp1)
	temp1 += 9
	DrawSpriteScreenXY(20, 38, temp1)
	temp1 -= 2
	DrawNumbers(24, 56, temp1, 1, 2, 8, 0)
end function

event ObjectDraw
	if player.lives > 99
		player.lives = 99
	end if
	if player.continues > 99
		player.continues = 99
	end if
	
	if object[0].value0 == 0
		object.value1++
		if object.value1 == 16
			object.value1 = 0
		end if
	else
		switch saved.timeLimit
		case 1 // 3 minutes
			temp1 = 2
			break
		case 2 //10 minutes
			temp1 = 9
			break
		default
			temp1 = 0
			break
		end switch
		if temp1 > 0
			if stage.minutes >= temp1
			object.value1++
				if object.value1 == 16
					object.value1 = 0
				end if
			end if
		end if
	end if
	CallFunction(object.value0)
end event


event ObjectStartup
	LoadSpriteSheet("Global/Display.gif")
	
	//Numbers
	SpriteFrame(0, 0, 8, 11, 1, 50) //0
	SpriteFrame(0, 0, 8, 11, 10, 50) //1
	SpriteFrame(0, 0, 8, 11, 19, 50) //2
	SpriteFrame(0, 0, 8, 11, 28, 50) //3
	SpriteFrame(0, 0, 8, 11, 1, 62) //4
	SpriteFrame(0, 0, 8, 11, 10, 62) //5
	SpriteFrame(0, 0, 8, 11, 19, 62) //6
	SpriteFrame(0, 0, 8, 11, 28, 62) //7
	SpriteFrame(0, 0, 8, 11, 1, 74) //8
	SpriteFrame(0, 0, 8, 11, 10, 74) //9
	
	SpriteFrame(0, 0, 40, 43, 1, 1) //10 Score Time Rings
	SpriteFrame(0, 0, 31, 11, 1, 119) //11 Red Time
	SpriteFrame(0, 0, 39, 11, 1, 131) //12 Red Rings
	SpriteFrame(0, 0, 29, 4, 1, 45) //13 ' "
	SpriteFrame(0, 0, 3, 11, 37, 50) //14 :
	SpriteFrame(0, 0, 16, 16, 83, 18) //15 Sonic Icon
	SpriteFrame(0, 0, 16, 16, 100, 18) //16 Tails Icon
	SpriteFrame(0, 0, 16, 16, 117, 18) //17 Knuckles Icon
	
	SpriteFrame(0, 0, 8, 8, 1, 98) //18 X
	SpriteFrame(0, 0, 8, 8, 10, 98) //19 Y
	
	SpriteFrame(0, 0, 6, 6, 19, 98) //20 //Lives X
	SpriteFrame(0, 0, 31, 7, 185, 18) //21 Sonic Name
	if saved.region == 0
		SpriteFrame(0, 0, 31, 7, 217, 18) //22 Tails Name
	else
		SpriteFrame(0, 0, 31, 7, 185, 26) //22 Miles Name
	end if
	SpriteFrame(0, 0, 31, 7, 217, 26) //23 Knuckles Name
	
	//Lives Numbers
	SpriteFrame(0, 0, 8, 8, 37, 64)
	SpriteFrame(0, 0, 8, 8, 46, 64)
	SpriteFrame(0, 0, 8, 8, 55, 64)
	SpriteFrame(0, 0, 8, 8, 64, 64)
	SpriteFrame(0, 0, 8, 8, 73, 64)
	SpriteFrame(0, 0, 8, 8, 82, 64)
	SpriteFrame(0, 0, 8, 8, 91, 64) //30
	SpriteFrame(0, 0, 8, 8, 100, 64)
	SpriteFrame(0, 0, 8, 8, 109, 64)
	SpriteFrame(0, 0, 8, 8, 118, 64)
	
	SpriteFrame(-16, 0, 8, 8, 127, 64) //34 Minus
	SpriteFrame(8, 0, 8, 8, 136, 64) //35 Plus
	SpriteFrame(0, 0, 8, 8, 25, 98) //36 Red X
	SpriteFrame(0, 0, 8, 8, 34, 98) //37 Red Y
	SpriteFrame(0, 0, 10, 8, 178, 70) //38 Infinite Lives
	
	SpriteFrame(0, 0, 31, 11, 160, 46) //39 Time
	SpriteFrame(0, 0, 40, 11, 1, 33) //40 Rings
	SpriteFrame(0, 0, 32, 11, 120, 46) //41 Best Time
		
	SpriteFrame(0, 0, 16, 16, 192, 41) //42 Super Icon
	
	SpriteFrame(10, -46, 52, 20, 163, 184) //43 GaS top
	SpriteFrame(10, -26, 52, 16, 188, 239) //44 GaS bottom
	SpriteFrame(0, 0, 7, 11, 157, 35) //45 Slash
	
	
	foreach (TypeName[HUD], arrayPos0, ALL_ENTITIES)
		switch options.gameMode
		case 10
			object[arrayPos0].value0 = HUD_DrawNickArcadeMode
			break
		case 2
			arrayPos1 = 30
			if SuperTimeAttack == 0
				arrayPos1 *= stage.playerListPos
			else
				arrayPos1 *= 3
			end if
			arrayPos1 += stage.listPos
			if stage.listPos > 16
				arrayPos1--
			end if
			arrayPos1 += 500
			

			object[arrayPos0].value0 = HUD_DrawTimeAttack
			object[arrayPos0].value2 = saveRAM[arrayPos1]
			break
		case 3
			object[arrayPos0].value0 = HUD_DrawArcadeMode
			break
		default
			object[arrayPos0].value0 = HUD_DrawMainGame
			break
		end switch
	next
end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
